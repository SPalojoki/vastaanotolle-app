// Prisma schema docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum QuestionType {
  TEXT
  MULTIPLE_CHOICE
}

enum Language {
  FI
  SE
}

model Form {
  id           Int               @id @default(autoincrement())
  accessCode   String            
  published    Boolean           @default(true)
  isRemoved    Boolean           @default(false)
  createdAt    DateTime          @default(now())
  questions    Question[]
  translations FormTranslation[]
}

model FormTranslation {
  id           Int       @id @default(autoincrement())
  formId       Int
  language     Language
  title        String
  form         Form      @relation(fields: [formId], references: [id])
}

model Question {
  id           Int                 @id @default(autoincrement())
  formId       Int
  type         QuestionType
  answerCount  Int?
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  form         Form                @relation(fields: [formId], references: [id])
  options      Option[]
  translations QuestionTranslation[]
}

model QuestionTranslation {
  id           Int        @id @default(autoincrement())
  questionId   Int
  language     Language
  text         String
  reportText   String
  question     Question   @relation(fields: [questionId], references: [id])
}

model Option {
  id           Int             @id @default(autoincrement())
  questionId   Int
  question     Question        @relation(fields: [questionId], references: [id])
  translations OptionTranslation[]
}

model OptionTranslation {
  id           Int        @id @default(autoincrement())
  optionId     Int
  language     Language
  text         String
  reportText   String
  option       Option      @relation(fields: [optionId], references: [id])
}